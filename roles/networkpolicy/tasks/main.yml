---
# tasks file for networkpolicy

- name: Create networkpolicy directory
  file:
    path: "{{ networkpolicy_dir }}"
    state: directory

- name: Create multitenant networkpolicy 
  copy:
    src: files/multitenant-nwpolicy.yaml
    dest: "{{ networkpolicy_path }}"

- name: Check if default namespace if needs to be labeled
  k8s_facts:
    api_version: operator.openshift.io/v1
    name: default
    kind: IngressController
    namespace: openshift-ingress-operator
  register: default_ic

#- debug:
#    var: default_ic

- name: Register endpointPublishingStrategy
  set_fact: 
    ingress_eps: "{{ default_ic | json_query('resources[].status.endpointPublishingStrategy.type') }}"

- debug:
    var: ingress_eps

- name: Label default namespace
  shell: "oc label namespace default 'network.openshift.io/policy-group=ingress'"
  when: '"HostNetwork" in ingress_eps'
  ignore_errors: yes

- name: Retrieve default project template
  shell: "oc adm create-bootstrap-project-template -o yaml > $HOME/ocp4-day-two/roles/networkpolicy/files/template.yaml"

- name: Append networkpolicy to template
  blockinfile:
    path: $HOME/ocp4-day-two/roles/networkpolicy/files/template.yaml
    block: "{{ lookup('file', 'multitenant-nwpolicy.yaml') }}"
    insertbefore: "parameters:"

- name: Create project template in openshift-config ns
  k8s:
    state: present
    definition: "{{ lookup('file', 'template.yaml') }}"
    namespace: openshift-config

# oc edit project.config.openshift.io/cluster
- name: Edit project config resource 
  k8s:
    state: present
    definition:
      apiVersion: config.openshift.io/v1
      kind: Project
      metadata:
        name: cluster
      spec:
        projectRequestTemplate:
          name: project-request

#- name: Create a test project
#  k8s:
#    name: test
#    api_version: project.openshift.io/v1
#    kind: Project
#    state: present
#
#- name: Check if networkpolicy is applied
#  shell: "oc get networkpolicy -n test"
#  register: test_project_nwpolicy
#
#- debug:
#    var: test_project_nwpolicy
#
#- name:
#  k8s:
#    state: absent
#    kind: Namespace
#    name: test
